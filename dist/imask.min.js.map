{"version":3,"sources":["utils.js","imask.js","masks/base.js","masks/regexp.js","masks/func.js","masks/pattern.js"],"names":["isString","str","String","conform","res","fallback","arguments","length","undefined","IMask","el","opts","mask","rawValue","value","BaseMask","_listeners","_refreshingCount","saveState","this","bind","processInput","_onDrop","addEventListener","removeEventListener","unbindEvents","ev","_oldValue","_oldSelection","selectionStart","selectionEnd","inputValue","cursorPos","details","resolve","_this","setSelectionRange","fireEvent","handler","push","hIndex","indexOf","splice","listeners","forEach","l","_oldRawValue","_oldUnmaskedValue","unmaskedValue","refresh","preventDefault","stopPropagation","startRefresh","endRefresh","RegExpMask","test","FuncMask","apply","PatternMask","placeholder","definitions","_extends","DEFINITIONS","_hollows","_buildResolvers","_alignCursor","_this2","_this3","_charDefs","pattern","unmaskingBlock","optionalBlock","i","ch","type","DEF_TYPES","INPUT","FIXED","unmasking","optional","_resolvers","defKey","MaskFactory","tail","placeholderBuffer","hollows","slice","ci","di","_mapPosToDefIndex","def","resolver","char","chres","_placeholder","fromPos","input","_isHiddenHollow","defIndex","filter","h","_this4","_hollowsBefore","pos","lastHollowIndex","head","inserted","insertSteps","oldSelection","oldValue","startChangePos","Math","min","start","removedCount","max","end","insertedCount","substring","substr","tailInput","_extractInput","_generateInsertSteps","istep","step","_insertSteps$istep","result","_tryAppendTail","_result","appended","_appendFixedEnd","hasHollows","_appendPlaceholderEnd","isComplete","show","cursorDefIndex","rPos","rDef","lPos","lDef","_mapDefIndexToPos","_this5","unmasked","ph","DEFAULT_PLACEHOLDER","map","_this6","join","_definitions","defs","_mask","initialized","RegExp","Function","window"],"mappings":"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","file":"imask.min.js","sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n","import {isString} from './utils';\r\n\r\nimport BaseMask from './masks/base';\r\nimport RegExpMask from './masks/regexp';\r\nimport FuncMask from './masks/func';\r\nimport PatternMask from './masks/pattern';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n  var mask = IMask.MaskFactory(el, opts);\r\n  mask.bindEvents();\r\n  // refresh\r\n  mask.rawValue = el.value;\r\n  return mask;\r\n}\r\n\r\nIMask.MaskFactory = function (el, opts) {\r\n  var mask = opts.mask;\r\n  if (mask instanceof BaseMask) return mask;\r\n  if (mask instanceof RegExp) return new RegExpMask(el, opts);\r\n  if (mask instanceof Function) return new FuncMask(el, opts);\r\n  if (isString(mask)) return new PatternMask(el, opts);\r\n  return new BaseMask(el, opts);\r\n}\r\nIMask.BaseMask = BaseMask;\r\nIMask.FuncMask = FuncMask;\r\nIMask.RegExpMask = RegExpMask;\r\nIMask.PatternMask = PatternMask;\r\nwindow.IMask = IMask;\r\n","import {conform} from '../utils';\r\n\r\n// TODO\r\n// - empty placeholder\r\n// - validateOnly\r\n// - add comments\r\n\r\n\r\nexport default\r\nclass BaseMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.mask = opts.mask;\r\n\r\n    this._listeners = {};\r\n    this._refreshingCount = 0;\r\n\r\n    this.saveState = this.saveState.bind(this);\r\n    this.processInput = this.processInput.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveState);\r\n    this.el.addEventListener('input', this.processInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveState);\r\n    this.el.removeEventListener('input', this.processInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  saveState (ev) {\r\n    this._oldValue = this.el.value;\r\n    this._oldSelection = {\r\n      start: this.el.selectionStart,\r\n      end: this.el.selectionEnd\r\n    }\r\n  }\r\n\r\n  processInput (ev) {\r\n     var inputValue = this.el.value;\r\n\r\n    // use selectionEnd for handle Undo\r\n    var cursorPos = this.el.selectionEnd;\r\n    var details = {\r\n      oldSelection: this._oldSelection,\r\n      cursorPos: cursorPos,\r\n      oldValue: this._oldValue\r\n    };\r\n\r\n    var res = inputValue;\r\n    res = conform(this.resolve(res, details),\r\n      res,\r\n      this._oldValue);\r\n\r\n    if (res !== inputValue) {\r\n      this.el.value = res;\r\n      cursorPos = details.cursorPos;\r\n    }\r\n\r\n    // queue change cursor\r\n    setTimeout(() => this.el.setSelectionRange(cursorPos, cursorPos), 0);\r\n\r\n    if (res !== this._oldValue) this.fireEvent(\"accept\");\r\n    return res;\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  // override this\r\n  resolve (str, details) { return str; }\r\n\r\n  get rawValue () {\r\n    return this.el.value;\r\n  }\r\n\r\n  set rawValue (str) {\r\n    this.startRefresh();\r\n    this.el.value = str;\r\n    this.endRefresh();\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this.el.value;\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.startRefresh();\r\n    this.el.value = value;\r\n    this.endRefresh();\r\n  }\r\n\r\n  refresh () {\r\n    // use unmasked value if value was not changed to update with options correctly\r\n    if (this._oldRawValue === this.el.value) this.el.value = this._oldUnmaskedValue;\r\n    delete this._oldRawValue;\r\n    delete this._oldUnmaskedValue;\r\n\r\n    var str = this.el.value;\r\n    var details = {\r\n      cursorPos: this.el.value.length,\r\n      startChangePos: 0,\r\n      oldSelection: {\r\n        start: 0,\r\n        end: this.el.value.length\r\n      },\r\n      removedCount: this.el.value.length,\r\n      insertedCount: str.length,\r\n      oldValue: this.el.value\r\n    };\r\n    this.el.value = conform(this.resolve(str, details), this.el.value);\r\n  }\r\n\r\n  startRefresh () {\r\n    // store unmasked value to apply after changes\r\n    if (!this._refreshingCount) {\r\n      this._oldUnmaskedValue = this.unmaskedValue;\r\n      this._oldRawValue = this.rawValue;\r\n    }\r\n    ++this._refreshingCount;\r\n  }\r\n\r\n  endRefresh () {\r\n    --this._refreshingCount;\r\n    if (!this._refreshingCount) this.refresh();\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\nexport default\r\nclass RegExpMask extends BaseMask {\r\n  resolve (str) {\r\n    return this.mask.test(str);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\nexport default\r\nclass FuncMask extends BaseMask {\r\n  resolve (...args) {\r\n    return this.mask(...args);\r\n  }\r\n}\r\n","import {conform} from '../utils';\r\nimport BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass PatternMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n    this.startRefresh();\r\n\r\n    this.placeholder = opts.placeholder;\r\n    this.definitions = {\r\n      ...PatternMask.DEFINITIONS,\r\n      ...opts.definitions\r\n    };\r\n\r\n    this._hollows = [];\r\n    this._buildResolvers();\r\n\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n\r\n    this.endRefresh();\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    ['click', 'focus'].forEach(ev =>\r\n      this.el.addEventListener(ev, this._alignCursor));\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    ['click', 'focus'].forEach(ev =>\r\n      this.el.removeEventListener(ev, this._alignCursor));\r\n  }\r\n\r\n  _buildResolvers () {\r\n    this._charDefs = [];\r\n    var pattern = this.mask;\r\n\r\n    if (!pattern || !this.definitions) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var ch = pattern[i];\r\n      var type = !unmaskingBlock && ch in this.definitions ?\r\n        PatternMask.DEF_TYPES.INPUT :\r\n        PatternMask.DEF_TYPES.FIXED;\r\n      var unmasking = type === PatternMask.DEF_TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternMask.DEF_TYPES.INPUT && optionalBlock;\r\n\r\n      if (ch === '{' || ch === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '[' || ch === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '\\\\') {\r\n        ++i;\r\n        ch = pattern[i];\r\n        // TODO validation\r\n        if (!ch) break;\r\n        type = PatternMask.DEF_TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push({\r\n        char: ch,\r\n        type: type,\r\n        optional: optional,\r\n        unmasking: unmasking\r\n      });\r\n    }\r\n\r\n    this._resolvers = {};\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  _tryAppendTail (str, tail) {\r\n    var placeholderBuffer = '';\r\n    var hollows = this._hollows.slice();\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(str.length); ci < tail.length; ++di) {\r\n      var ch = tail[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      // failed\r\n      if (!def) return;\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, di, str) || '';\r\n        if (chres) {\r\n          chres = conform(chres, ch);\r\n          ++ci;\r\n        } else {\r\n          if (!def.optional) chres = this._placeholder.char;\r\n          hollows.push(di);\r\n        }\r\n        str += placeholderBuffer + chres;\r\n        placeholderBuffer = '';\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n      }\r\n    }\r\n\r\n    return [str, hollows];\r\n  }\r\n\r\n  _extractInput (str, fromPos=0) {\r\n    var input = '';\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(fromPos); ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT &&\r\n        this._hollows.indexOf(di) < 0) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  _isHiddenHollow (defIndex) {\r\n    return this._hollows.indexOf(defIndex) >= 0 &&\r\n      this._charDefs[defIndex] && this._charDefs[defIndex].optional;\r\n  }\r\n\r\n  _hollowsBefore (defIndex) {\r\n    return this._hollows.filter(h => h < defIndex && this._isHiddenHollow(h));\r\n  }\r\n\r\n  _mapDefIndexToPos (defIndex) {\r\n    return defIndex - this._hollowsBefore(defIndex).length;\r\n  }\r\n\r\n  _mapPosToDefIndex (pos) {\r\n    var lastHollowIndex = pos;\r\n    // extend contiguous\r\n    while (this._isHiddenHollow(lastHollowIndex-1)) ++lastHollowIndex;\r\n\r\n    return pos + this._hollowsBefore(lastHollowIndex).length;\r\n  }\r\n\r\n  _generateInsertSteps (head, inserted) {\r\n    var res = head;\r\n    var hollows = this._hollows.slice();\r\n    var placeholderBuffer = '';\r\n    var insertSteps = [[res, hollows.slice()]];\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(head.length); ci<inserted.length;) {\r\n      var def = this._charDefs[di];\r\n      if (!def) break;\r\n\r\n      var ch = inserted[ci];\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, ci, res) || '';\r\n        // if ok - next di\r\n        if (chres) {\r\n          res += placeholderBuffer + conform(chres, ch); placeholderBuffer = '';\r\n          insertSteps.push([res, hollows.slice()]);\r\n        } else if (def.optional) {\r\n          if (hollows.indexOf(di) < 0) hollows.push(di);\r\n        }\r\n        if (chres || def.optional) ++di;\r\n        if (chres || !def.optional) ++ci;\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n\r\n        if (ch === def.char) ++ci;\r\n        ++di;\r\n      }\r\n    }\r\n\r\n    return insertSteps;\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var cursorPos = details.cursorPos;\r\n    var oldSelection = details.oldSelection;\r\n    var oldValue = details.oldValue;\r\n    var startChangePos = Math.min(cursorPos, oldSelection.start);\r\n    // Math.max for opposite operation\r\n    var removedCount = Math.max((oldSelection.end - startChangePos) ||\r\n      // for Delete\r\n      oldValue.length - str.length, 0);\r\n    var insertedCount = cursorPos - startChangePos;\r\n\r\n\r\n    var head = str.substring(0, startChangePos);\r\n    var tail = str.substring(startChangePos + insertedCount);\r\n    var inserted = str.substr(startChangePos, insertedCount);\r\n\r\n    var tailInput = this._extractInput(tail, startChangePos + removedCount);\r\n\r\n    // remove hollows after cursor\r\n    var lastHollowIndex = this._mapPosToDefIndex(startChangePos);\r\n    this._hollows = this._hollows.filter(h => h < lastHollowIndex);\r\n\r\n    var res = head;\r\n\r\n    // insert available\r\n    var insertSteps = this._generateInsertSteps(head, inserted);\r\n    for (var istep=insertSteps.length-1; istep >= 0; --istep) {\r\n      var step;\r\n      [step, this._hollows] = insertSteps[istep];\r\n      var result = this._tryAppendTail(step, tailInput);\r\n      if (result) {\r\n        [res, this._hollows] = result;\r\n        cursorPos = step.length;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (inserted) {\r\n      // append fixed at end\r\n      var appended = this._appendFixedEnd(res);\r\n      cursorPos += appended.length - res.length;\r\n      res = appended;\r\n    }\r\n\r\n    // remove head fixed and hollows if removed at end\r\n    if (!inserted && cursorPos === res.length) {\r\n      var di = this._mapPosToDefIndex(cursorPos-1);\r\n      var hasHollows = false;\r\n      for (; di > 0; --di) {\r\n        var def = this._charDefs[di];\r\n        if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n          if (this._hollows.indexOf(di) >= 0) hasHollows = true;\r\n          else break;\r\n        }\r\n      }\r\n      if (hasHollows) res = res.slice(0, di + 1);\r\n    }\r\n\r\n    // append placeholder\r\n    res = this._appendPlaceholderEnd(res);\r\n    details.cursorPos = cursorPos;\r\n\r\n    return res;\r\n  }\r\n\r\n  processInput (ev) {\r\n    var res = super.processInput(ev);\r\n    if (res !== this._oldValue && this.isComplete) this.fireEvent(\"complete\");\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.filter((def, di) =>\r\n      def.type === PatternMask.DEF_TYPES.INPUT && !def.optional &&\r\n      this._hollows.indexOf(di) >= 0).length;\r\n  }\r\n\r\n  _appendFixedEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length);; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (!def) break;\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      if (di >= res.length) res += def.char;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  _appendPlaceholderEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length); di<this._charDefs.length; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT && this._hollows.indexOf(di) < 0) {\r\n        this._hollows.push(di);\r\n      }\r\n      if (this._placeholder.show === 'always') {\r\n        res += def.type === PatternMask.DEF_TYPES.FIXED ?\r\n          def.char :\r\n          !def.optional ?\r\n            this._placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    var str = this.rawValue;\r\n    var unmasked = '';\r\n    for (var ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.unmasking && this._hollows.indexOf(di) < 0 &&\r\n        (def.type === PatternMask.DEF_TYPES.INPUT && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n          def.char === ch)) {\r\n        unmasked += ch;\r\n      }\r\n      ++ci;\r\n    }\r\n    return unmasked;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this.startRefresh();\r\n\r\n    var res = '';\r\n    for (var ci=0, di=0; ci<str.length && di<this._charDefs.length;) {\r\n      var def = this._charDefs[di];\r\n      var ch = str[ci];\r\n\r\n      var chres = '';\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        if (this._resolvers[def.char].resolve(ch, ci, res)) {\r\n          chres = ch;\r\n          ++di;\r\n        }\r\n        ++ci;\r\n      } else {\r\n        chres = def.char;\r\n        if (def.unmasking && def.char === ch) ++ci;\r\n        ++di;\r\n      }\r\n      res += chres;\r\n    }\r\n    this._hollows.length = 0;\r\n    this.rawValue = res;\r\n\r\n    this.endRefresh();\r\n  }\r\n\r\n  get placeholder () { return this._placeholder; }\r\n\r\n  set placeholder (ph) {\r\n    this.startRefresh();\r\n    this._placeholder = {\r\n      ...PatternMask.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n    this.endRefresh();\r\n  }\r\n\r\n  get placeholderLabel () {\r\n    return this._charDefs.map(def =>\r\n      def.type === PatternMask.DEF_TYPES.FIXED ?\r\n        def.char :\r\n        !def.optional ?\r\n          this._placeholder.char :\r\n          '').join('');\r\n  }\r\n\r\n  get definitions () { return this._definitions; }\r\n\r\n  set definitions (defs) {\r\n    this.startRefresh();\r\n    this._definitions = defs;\r\n    this._buildResolvers();\r\n    this.endRefresh();\r\n  }\r\n\r\n  get mask () { return this._mask; }\r\n\r\n  set mask (mask) {\r\n    var initialized = this._mask;\r\n    if (initialized) this.startRefresh();\r\n    this._mask = mask;\r\n    if (initialized) {\r\n      this._buildResolvers();\r\n      this.endRefresh();\r\n    }\r\n  }\r\n\r\n  _alignCursor () {\r\n    var cursorPos = this.el.selectionEnd;\r\n    var cursorDefIndex = this._mapPosToDefIndex(cursorPos);\r\n    for (var rPos = cursorDefIndex; rPos >= 0; --rPos) {\r\n      var rDef = this._charDefs[rPos];\r\n      var lPos = rPos-1;\r\n      var lDef = this._charDefs[lPos];\r\n      if (this._isHiddenHollow(lPos)) continue;\r\n\r\n      if ((!rDef || rDef.type === PatternMask.DEF_TYPES.INPUT && this._hollows.indexOf(rPos) >= 0 && !this._isHiddenHollow(rPos)) &&\r\n        this._hollows.indexOf(lPos) < 0) {\r\n        cursorDefIndex = rPos;\r\n        if (!lDef || lDef.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      }\r\n    }\r\n    cursorPos = this._mapDefIndexToPos(cursorDefIndex);\r\n    this.el.setSelectionRange(cursorPos, cursorPos);\r\n  }\r\n}\r\nPatternMask.DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternMask.DEF_TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n}\r\nPatternMask.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\n"]}