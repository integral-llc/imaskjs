{"version":3,"sources":["utils.js","imask.js","masks/base.js","masks/regexp.js","masks/func.js","masks/pattern.js"],"names":["isString","str","String","conform","res","fallback","arguments","length","undefined","IMask","el","opts","mask","rawValue","value","BaseMask","_listeners","_refreshingCount","saveState","this","bind","processInput","_onDrop","addEventListener","removeEventListener","unbindEvents","ev","_oldRawValue","_oldUnmaskedValue","unmaskedValue","_oldSelection","selectionStart","cursorPos","details","inputValue","resolve","_this","_onChangeState","_fireChangeEvents","_isChanged","fireEvent","_changeState","handler","push","hIndex","indexOf","splice","listeners","forEach","l","preventDefault","stopPropagation","selectionEnd","pos","setSelectionRange","RegExpMask","test","FuncMask","apply","PatternMask","_hollows","placeholder","definitions","_extends","DEFINITIONS","_alignCursor","_initialized","_this2","_this3","_definitions","_charDefs","pattern","unmaskingBlock","optionalBlock","i","ch","type","DEF_TYPES","INPUT","FIXED","unmasking","optional","_buildResolvers","_resolvers","defKey","MaskFactory","tail","placeholderBuffer","hollows","slice","overflow","ci","di","_mapPosToDefIndex","def","resolver","char","chres","_placeholder","fromPos","input","_isHiddenHollow","_isHollow","defIndex","filter","h","_this4","_hollowsBefore","lastHollowIndex","head","inserted","insertSteps","oldSelection","oldValue","startChangePos","Math","min","start","removedCount","max","end","insertedCount","substring","substr","tailInput","_extractInput","_generateInsertSteps","istep","step","_insertSteps$istep","_appendTail","tres","_appendTail3","thollows","_ref","appended","_appendFixedEnd","hasHollows","_appendPlaceholderEnd","isComplete","show","cursorDefIndex","rPos","rDef","lPos","lDef","_mapDefIndexToPos","_this5","unmasked","_appendTail5","ph","DEFAULT_PLACEHOLDER","map","_this6","join","defs","_installDefinitions","_mask","RegExp","Function","window"],"mappings":"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","file":"imask.min.js","sourcesContent":["export\r\nfunction isString (str) {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport\r\nfunction conform (res, str, fallback='') {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n","import {isString} from './utils';\r\n\r\nimport BaseMask from './masks/base';\r\nimport RegExpMask from './masks/regexp';\r\nimport FuncMask from './masks/func';\r\nimport PatternMask from './masks/pattern';\r\n\r\n\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n  var mask = IMask.MaskFactory(el, opts);\r\n  mask.bindEvents();\r\n  // refresh\r\n  mask.rawValue = el.value;\r\n  return mask;\r\n}\r\n\r\nIMask.MaskFactory = function (el, opts) {\r\n  var mask = opts.mask;\r\n  if (mask instanceof BaseMask) return mask;\r\n  if (mask instanceof RegExp) return new RegExpMask(el, opts);\r\n  if (mask instanceof Function) return new FuncMask(el, opts);\r\n  if (isString(mask)) return new PatternMask(el, opts);\r\n  return new BaseMask(el, opts);\r\n}\r\nIMask.BaseMask = BaseMask;\r\nIMask.FuncMask = FuncMask;\r\nIMask.RegExpMask = RegExpMask;\r\nIMask.PatternMask = PatternMask;\r\nwindow.IMask = IMask;\r\n","import {conform} from '../utils';\r\n\r\n\r\nexport default\r\nclass BaseMask {\r\n  constructor (el, opts) {\r\n    this.el = el;\r\n    this.mask = opts.mask;\r\n\r\n    this._listeners = {};\r\n    this._refreshingCount = 0;\r\n\r\n    this.saveState = this.saveState.bind(this);\r\n    this.processInput = this.processInput.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n  }\r\n\r\n  bindEvents () {\r\n    this.el.addEventListener('keydown', this.saveState);\r\n    this.el.addEventListener('input', this.processInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  unbindEvents () {\r\n    this.el.removeEventListener('keydown', this.saveState);\r\n    this.el.removeEventListener('input', this.processInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n  }\r\n\r\n  destroy () {\r\n    this.unbindEvents();\r\n    this._listeners.length = 0;\r\n  }\r\n\r\n  get selectionStart () {\r\n    return this.el.selectionStart;\r\n  }\r\n\r\n  get cursorPos () {\r\n    return this.el.selectionEnd;\r\n  }\r\n\r\n  set cursorPos (pos) {\r\n    this.el.setSelectionRange(pos, pos);\r\n  }\r\n\r\n  saveState (ev) {\r\n    this._oldRawValue = this.rawValue;\r\n    this._oldUnmaskedValue = this.unmaskedValue;\r\n    this._oldSelection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    }\r\n  }\r\n\r\n  _changeState (details) {\r\n    details = {\r\n      cursorPos: this.cursorPos,\r\n      oldSelection: this._oldSelection,\r\n      oldValue: this._oldRawValue,\r\n      oldUnmaskedValue: this._oldUnmaskedValue,\r\n      ...details\r\n    };\r\n\r\n    var inputValue = this.rawValue;\r\n    var res = inputValue;\r\n    res = conform(this.resolve(res, details),\r\n      res,\r\n      this._oldRawValue);\r\n\r\n    if (res !== inputValue) {\r\n      this.el.value = res;\r\n      this.cursorPos = details.cursorPos;\r\n      // also queue change cursor for some browsers\r\n      setTimeout(() => this.cursorPos = details.cursorPos, 0);\r\n    }\r\n\r\n    this._onChangeState();\r\n\r\n    return res;\r\n  }\r\n\r\n  _onChangeState () {\r\n    this._fireChangeEvents();\r\n    this.saveState();\r\n  }\r\n\r\n  get _isChanged () {\r\n    return (this.rawValue !== this._oldRawValue ||\r\n      this.unmaskedValue !== this._oldUnmaskedValue);\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    if (this._isChanged) this.fireEvent(\"accept\");\r\n  }\r\n\r\n  processInput (ev) {\r\n    if (!this._isChanged) return;\r\n    this._changeState();\r\n  }\r\n\r\n  on (ev, handler) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  off (ev, handler) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    var hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners.splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  fireEvent (ev) {\r\n    var listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  // override this\r\n  resolve (str, details) { return str; }\r\n\r\n  get rawValue () {\r\n    return this.el.value;\r\n  }\r\n\r\n  set rawValue (str) {\r\n    this.el.value = str;\r\n    this._changeState({\r\n      cursorPos: str.length,\r\n      oldSelection: {\r\n        start: 0,\r\n        end: str.length\r\n      },\r\n      oldValue: str\r\n    });\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    return this.rawValue;\r\n  }\r\n\r\n  set unmaskedValue (value) {\r\n    this.rawValue = value;\r\n  }\r\n\r\n  _onDrop (ev) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass RegExpMask extends BaseMask {\r\n  resolve (str) {\r\n    return this.mask.test(str);\r\n  }\r\n}\r\n","import BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass FuncMask extends BaseMask {\r\n  resolve (...args) {\r\n    return this.mask(...args);\r\n  }\r\n}\r\n","import {conform} from '../utils';\r\nimport BaseMask from './base';\r\n\r\n\r\nexport default\r\nclass PatternMask extends BaseMask {\r\n  constructor (el, opts) {\r\n    super(el, opts);\r\n\r\n    this._hollows = [];\r\n    this.placeholder = opts.placeholder;\r\n    this.definitions = {\r\n      ...PatternMask.DEFINITIONS,\r\n      ...opts.definitions\r\n    };\r\n\r\n    this._alignCursor = this._alignCursor.bind(this);\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  bindEvents () {\r\n    super.bindEvents();\r\n    ['click', 'focus'].forEach(ev =>\r\n      this.el.addEventListener(ev, this._alignCursor));\r\n  }\r\n\r\n  unbindEvents () {\r\n    super.unbindEvents();\r\n    ['click', 'focus'].forEach(ev =>\r\n      this.el.removeEventListener(ev, this._alignCursor));\r\n  }\r\n\r\n  _installDefinitions (definitions) {\r\n    this._definitions = definitions;\r\n    this._charDefs = [];\r\n    var pattern = this.mask;\r\n\r\n    if (!pattern || !definitions) return;\r\n\r\n    var unmaskingBlock = false;\r\n    var optionalBlock = false;\r\n    for (var i=0; i<pattern.length; ++i) {\r\n      var ch = pattern[i];\r\n      var type = !unmaskingBlock && ch in definitions ?\r\n        PatternMask.DEF_TYPES.INPUT :\r\n        PatternMask.DEF_TYPES.FIXED;\r\n      var unmasking = type === PatternMask.DEF_TYPES.INPUT || unmaskingBlock;\r\n      var optional = type === PatternMask.DEF_TYPES.INPUT && optionalBlock;\r\n\r\n      if (ch === '{' || ch === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '[' || ch === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (ch === '\\\\') {\r\n        ++i;\r\n        ch = pattern[i];\r\n        // TODO validation\r\n        if (!ch) break;\r\n        type = PatternMask.DEF_TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push({\r\n        char: ch,\r\n        type: type,\r\n        optional: optional,\r\n        unmasking: unmasking\r\n      });\r\n    }\r\n\r\n    this._buildResolvers();\r\n  }\r\n\r\n  _buildResolvers () {\r\n    this._resolvers = {};\r\n    for (var defKey in this.definitions) {\r\n      this._resolvers[defKey] = IMask.MaskFactory(this.el, {\r\n        mask: this.definitions[defKey]\r\n      });\r\n    }\r\n  }\r\n\r\n  _appendTail (str, tail) {\r\n    var placeholderBuffer = '';\r\n    var hollows = this._hollows.slice();\r\n    var overflow = false;\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(str.length); ci < tail.length; ++di) {\r\n      var ch = tail[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      // failed\r\n      if (!def) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, di, str) || '';\r\n        if (chres) {\r\n          chres = conform(chres, ch);\r\n          ++ci;\r\n        } else {\r\n          if (!def.optional) chres = this._placeholder.char;\r\n          hollows.push(di);\r\n        }\r\n        str += placeholderBuffer + chres;\r\n        placeholderBuffer = '';\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n      }\r\n    }\r\n\r\n    return [str, hollows, overflow];\r\n  }\r\n\r\n  _extractInput (str, fromPos=0) {\r\n    var input = '';\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(fromPos); ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT && !this._isHollow(di)) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  _isHollow (defIndex) {\r\n    return this._hollows.indexOf(defIndex) >= 0;\r\n  }\r\n\r\n  _isHiddenHollow (defIndex) {\r\n    return this._isHollow(defIndex) &&\r\n      this._charDefs[defIndex] && this._charDefs[defIndex].optional;\r\n  }\r\n\r\n  _hollowsBefore (defIndex) {\r\n    return this._hollows.filter(h => h < defIndex && this._isHiddenHollow(h));\r\n  }\r\n\r\n  _mapDefIndexToPos (defIndex) {\r\n    return defIndex - this._hollowsBefore(defIndex).length;\r\n  }\r\n\r\n  _mapPosToDefIndex (pos) {\r\n    var lastHollowIndex = pos;\r\n    // extend contiguous\r\n    while (this._isHiddenHollow(lastHollowIndex-1)) ++lastHollowIndex;\r\n\r\n    return pos + this._hollowsBefore(lastHollowIndex).length;\r\n  }\r\n\r\n  _generateInsertSteps (head, inserted) {\r\n    var res = head;\r\n    var hollows = this._hollows.slice();\r\n    var placeholderBuffer = '';\r\n    var insertSteps = [[res, hollows.slice()]];\r\n\r\n    for (var ci=0, di=this._mapPosToDefIndex(head.length); ci<inserted.length;) {\r\n      var def = this._charDefs[di];\r\n      if (!def) break;\r\n\r\n      var ch = inserted[ci];\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n        var resolver = this._resolvers[def.char];\r\n        var chres = resolver.resolve(ch, ci, res) || '';\r\n        // if ok - next di\r\n        if (chres) {\r\n          res += placeholderBuffer + conform(chres, ch); placeholderBuffer = '';\r\n          insertSteps.push([res, hollows.slice()]);\r\n        } else if (def.optional) {\r\n          if (hollows.indexOf(di) < 0) hollows.push(di);\r\n        }\r\n        if (chres || def.optional) ++di;\r\n        if (chres || !def.optional) ++ci;\r\n      } else {\r\n        placeholderBuffer += def.char;\r\n\r\n        if (ch === def.char) ++ci;\r\n        ++di;\r\n      }\r\n    }\r\n\r\n    return insertSteps;\r\n  }\r\n\r\n  resolve (str, details) {\r\n    var cursorPos = details.cursorPos;\r\n    var oldSelection = details.oldSelection;\r\n    var oldValue = details.oldValue;\r\n    var startChangePos = Math.min(cursorPos, oldSelection.start);\r\n    // Math.max for opposite operation\r\n    var removedCount = Math.max((oldSelection.end - startChangePos) ||\r\n      // for Delete\r\n      oldValue.length - str.length, 0);\r\n    var insertedCount = cursorPos - startChangePos;\r\n\r\n\r\n    var head = str.substring(0, startChangePos);\r\n    var tail = str.substring(startChangePos + insertedCount);\r\n    var inserted = str.substr(startChangePos, insertedCount);\r\n\r\n    var tailInput = this._extractInput(tail, startChangePos + removedCount);\r\n\r\n    // remove hollows after cursor\r\n    var lastHollowIndex = this._mapPosToDefIndex(startChangePos);\r\n    this._hollows = this._hollows.filter(h => h < lastHollowIndex);\r\n\r\n    var res = head;\r\n\r\n    // insert available\r\n    var insertSteps = this._generateInsertSteps(head, inserted);\r\n    for (var istep=insertSteps.length-1; istep >= 0; --istep) {\r\n      var step;\r\n      [step, this._hollows] = insertSteps[istep];\r\n      var [tres, thollows, overflow] = this._appendTail(step, tailInput);\r\n      if (!overflow) {\r\n        [res, this._hollows] = [tres, thollows];\r\n        cursorPos = step.length;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (inserted) {\r\n      // append fixed at end\r\n      var appended = this._appendFixedEnd(res);\r\n      cursorPos += appended.length - res.length;\r\n      res = appended;\r\n    }\r\n\r\n    // remove head fixed and hollows if removed at end\r\n    if (!inserted && cursorPos === res.length) {\r\n      var di = this._mapPosToDefIndex(cursorPos-1);\r\n      var hasHollows = false;\r\n      for (; di > 0; --di) {\r\n        var def = this._charDefs[di];\r\n        if (def.type === PatternMask.DEF_TYPES.INPUT) {\r\n          if (this._isHollow(di)) hasHollows = true;\r\n          else break;\r\n        }\r\n      }\r\n      if (hasHollows) res = res.slice(0, di + 1);\r\n    }\r\n\r\n    // append placeholder\r\n    res = this._appendPlaceholderEnd(res);\r\n    details.cursorPos = cursorPos;\r\n\r\n    return res;\r\n  }\r\n\r\n  _fireChangeEvents () {\r\n    // fire 'complete' after 'accept' event\r\n    super._fireChangeEvents();\r\n    if (this._isChanged && this.isComplete) this.fireEvent(\"complete\");\r\n  }\r\n\r\n  get isComplete () {\r\n    return !this._charDefs.filter((def, di) =>\r\n      def.type === PatternMask.DEF_TYPES.INPUT && !def.optional &&\r\n      this._isHollow(di)).length;\r\n  }\r\n\r\n  _appendFixedEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length);; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (!def) break;\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      if (di >= res.length) res += def.char;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  _appendPlaceholderEnd (res) {\r\n    for (var di=this._mapPosToDefIndex(res.length); di<this._charDefs.length; ++di) {\r\n      var def = this._charDefs[di];\r\n      if (def.type === PatternMask.DEF_TYPES.INPUT && !this._isHollow(di)) {\r\n        this._hollows.push(di);\r\n      }\r\n      if (this._placeholder.show === 'always') {\r\n        res += def.type === PatternMask.DEF_TYPES.FIXED ?\r\n          def.char :\r\n          !def.optional ?\r\n            this._placeholder.char :\r\n            '';\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  get unmaskedValue () {\r\n    var str = this.rawValue;\r\n    var unmasked = '';\r\n    for (var ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      var ch = str[ci];\r\n      var def = this._charDefs[di];\r\n\r\n      if (this._isHiddenHollow(di)) continue;\r\n\r\n      if (def.unmasking && !this._isHollow(di) &&\r\n        (def.type === PatternMask.DEF_TYPES.INPUT && this._resolvers[def.char].resolve(ch, ci, str) ||\r\n          def.char === ch)) {\r\n        unmasked += ch;\r\n      }\r\n      ++ci;\r\n    }\r\n    return unmasked;\r\n  }\r\n\r\n  set unmaskedValue (str) {\r\n    this._hollows.length = 0;\r\n    var res;\r\n    [res, this._hollows] = this._appendTail('', str);\r\n    this.el.value = this._appendPlaceholderEnd(res);\r\n\r\n    this._onChangeState();\r\n  }\r\n\r\n  get placeholder () { return this._placeholder; }\r\n\r\n  set placeholder (ph) {\r\n    this._placeholder = {\r\n      ...PatternMask.DEFAULT_PLACEHOLDER,\r\n      ...ph\r\n    };\r\n    if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  }\r\n\r\n  get placeholderLabel () {\r\n    return this._charDefs.map(def =>\r\n      def.type === PatternMask.DEF_TYPES.FIXED ?\r\n        def.char :\r\n        !def.optional ?\r\n          this._placeholder.char :\r\n          '').join('');\r\n  }\r\n\r\n  get definitions () { return this._definitions; }\r\n\r\n  set definitions (defs) {\r\n    this._installDefinitions(defs);\r\n    if (this._initialized) this.unmaskedValue = this.unmaskedValue;\r\n  }\r\n\r\n  get mask () { return this._mask; }\r\n\r\n  set mask (mask) {\r\n    this._mask = mask;\r\n    if (this._initialized) this.definitions = this.definitions;\r\n  }\r\n\r\n  _alignCursor () {\r\n    var cursorDefIndex = this._mapPosToDefIndex(this.cursorPos);\r\n    for (var rPos = cursorDefIndex; rPos >= 0; --rPos) {\r\n      var rDef = this._charDefs[rPos];\r\n      var lPos = rPos-1;\r\n      var lDef = this._charDefs[lPos];\r\n      if (this._isHiddenHollow(lPos)) continue;\r\n\r\n      if ((!rDef || rDef.type === PatternMask.DEF_TYPES.INPUT && this._isHollow(rPos) && !this._isHiddenHollow(rPos)) &&\r\n        !this._isHollow(lPos)) {\r\n        cursorDefIndex = rPos;\r\n        if (!lDef || lDef.type === PatternMask.DEF_TYPES.INPUT) break;\r\n      }\r\n    }\r\n    this.cursorPos = this._mapDefIndexToPos(cursorDefIndex);\r\n  }\r\n}\r\nPatternMask.DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\nPatternMask.DEF_TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n}\r\nPatternMask.DEFAULT_PLACEHOLDER = {\r\n  show: 'lazy',\r\n  char: '_'\r\n};\r\n"]}